[{"C:\\React\\Accardion\\Accardion\\src\\stories\\input.stories.tsx":"1","C:\\React\\Accardion\\Accardion\\src\\components\\Clocks\\NewClock.tsx":"2","C:\\React\\Accardion\\Accardion\\src\\components\\Clocks\\AnalogViewClock.tsx":"3","C:\\React\\Accardion\\Accardion\\src\\components\\Clocks\\DigitalClockView.tsx":"4","C:\\React\\Accardion\\Accardion\\src\\App.tsx":"5"},{"size":2338,"mtime":1612383305343,"results":"6","hashOfConfig":"7"},{"size":1253,"mtime":1616667111116,"results":"8","hashOfConfig":"7"},{"size":917,"mtime":1616669042068,"results":"9","hashOfConfig":"7"},{"size":472,"mtime":1616667111268,"results":"10","hashOfConfig":"7"},{"size":2285,"mtime":1616669115838,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1og7dfk",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\React\\Accardion\\Accardion\\src\\stories\\input.stories.tsx",["24","25","26"],"import React, {ChangeEvent, useRef, useState} from \"react\";\nimport {Story, Meta} from \"@storybook/react/types-6-0\";\nimport {action} from \"@storybook/addon-actions\";\nimport {Simulate} from \"react-dom/test-utils\";\nimport select = Simulate.select;\n\n\nexport default {\n    title: \"input\",\n    // component: input,\n    argTypes: {\n        backgroundColor: {control: \"color\"},\n    },\n} as Meta;\n\n\nexport const UncontrolledInput = () => <input/>;\n\nexport const TrackValueOffOnControlledInput = () => {\n    const [value, setValue] = useState(\"\");\n\n    const onChangeClick = (event: ChangeEvent<HTMLInputElement>) => {\n        const actualValue = event.currentTarget.value;\n        setValue(actualValue);\n    }\n    return <> <input value={value} onChange={onChangeClick}/> - {value} </>;\n}\n\nexport const GetValueOffOnControlledInputButtonPress = () => {\n    const [value, setValue] = useState(\"\");\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const save = () => {\n        const el = inputRef.current as HTMLInputElement;\n        setValue(el.value)\n    }\n    return <> <input ref={inputRef}/>\n        <button onClick={save}>save</button>\n        - actual value: {value} </>;\n}\n\nexport const ControlledInput = () => {\n    const [parentValue, setParentValue] = useState(\"\");\n    const callBack = (e: ChangeEvent<HTMLInputElement>) => {\n        setParentValue(e.currentTarget.value)\n    }\n\n    return <input value={parentValue} onChange={callBack}/>\n\n}\nexport const ControlledCheckbox = () => {\n    const [parentValue, setParentValue] = useState(true);\n    const callBack = (e: ChangeEvent<HTMLInputElement>) => {\n        setParentValue(e.currentTarget.checked)\n    }\n\n    return <input type=\"checkbox\" checked={parentValue} onChange={callBack}/>\n\n}\nexport const ControlledSelect = () => {\n    const [parentValue, setParentValue] = useState<string | undefined>(\"2\");\n    const callBack = (e:  ChangeEvent<HTMLSelectElement>) => {\n        setParentValue(e.currentTarget.value)\n    }\n    return <select name=\"Town\" id=\"5\" value={parentValue} onChange={callBack}>\n        <option value={\"1\"}>none</option>\n        <option value={\"2\"} >Minsk</option>\n        <option value={\"3\"} >Moscow</option>\n        <option value={\"4\"} >Berlin</option>\n    </select>\n}\n\n\nconst ControlledInputWithFixedValue = () => <input value={\"it-incubator.by\"}/>;\n\n\n\n\n\n",["27","28"],"C:\\React\\Accardion\\Accardion\\src\\components\\Clocks\\NewClock.tsx",["29"],"C:\\React\\Accardion\\Accardion\\src\\components\\Clocks\\AnalogViewClock.tsx",[],"C:\\React\\Accardion\\Accardion\\src\\components\\Clocks\\DigitalClockView.tsx",[],"C:\\React\\Accardion\\Accardion\\src\\App.tsx",["30","31"],{"ruleId":"32","severity":1,"message":"33","line":2,"column":9,"nodeType":"34","messageId":"35","endLine":2,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":3,"column":9,"nodeType":"34","messageId":"35","endLine":3,"endColumn":15},{"ruleId":"32","severity":1,"message":"37","line":74,"column":7,"nodeType":"34","messageId":"35","endLine":74,"endColumn":36},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":38,"column":13,"nodeType":"44","messageId":"45","endLine":40,"endColumn":19},{"ruleId":"32","severity":1,"message":"46","line":15,"column":10,"nodeType":"34","messageId":"35","endLine":15,"endColumn":28},{"ruleId":"32","severity":1,"message":"47","line":15,"column":30,"nodeType":"34","messageId":"35","endLine":15,"endColumn":51},"@typescript-eslint/no-unused-vars","'Story' is defined but never used.","Identifier","unusedVar","'action' is defined but never used.","'ControlledInputWithFixedValue' is assigned a value but never used.","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'accordionCollapsed' is assigned a value but never used.","'setAccordionCollapsed' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]